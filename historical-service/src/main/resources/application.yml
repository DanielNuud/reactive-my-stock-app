polygon:
  api:
    key: ${POLYGON_API_KEY}
management:
  endpoints:
    web:
      exposure:
        include: health, prometheus
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  prometheus:
    metrics:
      export:
        enabled: true
spring:
  data:
    mongodb:
      database: historical-db
      host: historical-mongo
      port: 27017
server:
  port: 8080

logging:
  level:
    org.springframework.web.reactive.function.client: TRACE
    reactor.netty.http.client: DEBUG
    logging.level.reactor.kafka.sender: DEBUG
    logging.level.org.apache.kafka.clients.producer: INFO

kafka:
  bootstrapServers: ${KAFKA_BOOTSTRAP_SERVERS:redpanda:9092}
  group-id: historical.realtime
  topics:
    notifications: notifications.commands
    realtime: stock.bars.realtime

resilience4j:
  circuitbreaker:
    instances:
      polygonHistCB:
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 50
        minimumNumberOfCalls: 20
        failureRateThreshold: 50
        slowCallDurationThreshold: 5s
        slowCallRateThreshold: 70
        waitDurationInOpenState: 45s
        permittedNumberOfCallsInHalfOpenState: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
  retry:
    instances:
      polygonHistRetry:
        maxAttempts: 2
        waitDuration: 300ms
        retryExceptions:
          - java.io.IOException
          - org.springframework.web.client.ResourceAccessException
          - org.springframework.web.client.HttpServerErrorException
        ignoreExceptions:
          - io.github.resilience4j.circuitbreaker.CallNotPermittedException
          - org.springframework.web.client.HttpClientErrorException
  ratelimiter:
    instances:
      polygonHistRL:
        limitForPeriod: 4
        limitRefreshPeriod: 1s
        timeoutDuration: 0
  bulkhead:
    instances:
      polygonHistBH:
        maxConcurrentCalls: 12
        maxWaitDuration: 0