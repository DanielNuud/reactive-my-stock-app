services:

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "5173:80"
    depends_on:
      - api-gateway
    networks:
      - stocknet

  company-db:
    image: postgres:16
    container_name: company-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: company-info-db-rx
    volumes:
      - company_db_data:/var/lib/postgresql/data
    networks:
      - stocknet

  news-db:
    image: postgres:16
    container_name: news-db
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: news-db-rx
    volumes:
      - news_db_data:/var/lib/postgresql/data
    networks:
      - stocknet

  historical-mongo:
    image: mongo:6.0
    container_name: historical-mongo
    restart: always
    ports:
      - "27019:27017"
    environment:
      MONGO_INITDB_DATABASE: historical-db
    volumes:
      - historical_mongo_data:/data/db
    networks:
      - stocknet

  notification-db:
    image: postgres:16
    container_name: notification-db
    restart: always
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: notification-db-rx
    volumes:
      - notification_db_data:/var/lib/postgresql/data
    networks:
      - stocknet

#  notifications-mongo:
#    image: mongo:6.0
#    container_name: notifications-mongo
#    restart: always
#    ports:
#      - "27020:27017"
#    environment:
#      MONGO_INITDB_DATABASE: notifications_db
#    volumes:
#      - notifications_mongo_data:/data/db
#    networks:
#      - stocknet

  redis-currency:
    image: redis:latest
    container_name: redis-currency
    restart: always
    ports:
      - "6380:6379"
    networks:
      - stocknet

  redis-company:
    image: redis:latest
    container_name: redis-company
    restart: always
    ports:
      - "6381:6379"
    networks:
      - stocknet

  currency-service:
    build:
      context: ./currency-service
    container_name: currency-service
    ports:
      - "8084:8080"
    depends_on:
      - redis-currency
    environment:
      SPRING_REDIS_HOST: redis-currency
      KAFKA_BOOTSTRAP_SERVERS: redpanda:9092
    networks:
      - stocknet

  news-service:
    build:
      context: ./news-service
    container_name: news-service
    ports:
      - "8082:8080"
    depends_on:
      - news-db
    environment:
      SPRING_R2DBC_URL: r2dbc:postgresql://news-db:5432/news-db-rx
      SPRING_R2DBC_USERNAME: postgres
      SPRING_R2DBC_PASSWORD: postgres
      POLYGON_API_KEY: V4_aPjfLf3uRm1v8EO3SRFvJfOM4WtDp
    networks:
      - stocknet

  company-info-service:
    build:
      context: ./company-info-service
    container_name: company-info-service
    ports:
      - "8081:8080"
    depends_on:
      - company-db
      - redis-company
    environment:
      SPRING_R2DBC_URL: r2dbc:postgresql://company-db:5432/company-info-db-rx
      SPRING_R2DBC_USERNAME: postgres
      SPRING_R2DBC_PASSWORD: postgres
      SPRING_REDIS_HOST: redis-company
      POLYGON_API_KEY: V4_aPjfLf3uRm1v8EO3SRFvJfOM4WtDp
    networks:
      - stocknet

  historical-service:
    build:
      context: ./historical-service
    container_name: historical-service
    ports:
      - "8083:8080"
    depends_on:
      - historical-mongo
    environment:
      SPRING_DATA_MONGODB_HOST: historical-mongo
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_DATABASE: historical-db
      POLYGON_API_KEY: V4_aPjfLf3uRm1v8EO3SRFvJfOM4WtDp
    networks:
      - stocknet

  notification-service:
    build:
      context: ./notification-service
    container_name: notification-service
    ports:
      - "8085:8080"
    depends_on:
      - notification-db
    environment:
      SPRING_R2DBC_URL: r2dbc:postgresql://notification-db:5432/notification-db-rx
      SPRING_R2DBC_USERNAME: postgres
      SPRING_R2DBC_PASSWORD: postgres
    networks:
      - stocknet

  stocks-service:
    build:
      context: ./stocks-service
    container_name: stocks-service
    ports:
      - "8086:8080"
    depends_on:
      - historical-service
    environment:
      POLYGON_API_KEY: V4_aPjfLf3uRm1v8EO3SRFvJfOM4WtDp
      KAFKA_BOOTSTRAP_SERVERS: redpanda:9092
    networks:
      - stocknet

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - company-info-service
    networks:
      - stocknet

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_ROOT_URL=http://localhost:3000
    restart: unless-stopped
    networks:
      - monitoring

volumes:
  historical_mongo_data:
  notification_db_data:
  company_db_data:
  news_db_data:

networks:
  stocknet:
    driver: bridge
  monitoring:
    driver: bridge